% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/jsTree.R
\name{jsTree}
\alias{jsTree}
\title{Htmlwidget for the jsTree Javascript library}
\usage{
jsTree(obj, sep = "/", sep_fixed = TRUE, core = NULL,
  tooltips = NULL, nodestate = NULL, ..., width = NULL,
  height = NULL, elementId = NULL, file = tempfile(pattern =
  "jstree-", fileext = ".html"), browse = TRUE)
}
\arguments{
\item{obj}{character, vector of directory tree}

\item{sep}{character, separator for \code{'obj'} which defines the hierarchy, Default: \code{'/'}.}

\item{sep_fixed}{boolean, to treat the sep character(s) as fixed when seperating, Default: TRUE.}

\item{core}{list, additional parameters to pass to core of jsTree, default: NULL}

\item{tooltips}{character, named vector of tooltips for elements in the tree, Default: NULL}

\item{nodestate}{boolean, vector the length of obj that initializes tree open to true values, Default: NULL}

\item{...}{parameters that are passed to the vcs package (see details)}

\item{width, height}{Must be a valid CSS unit (like \code{'100\%'},
\code{'400px'}, \code{'auto'}) or a number, which will be coerced to a
string and have \code{'px'} appended.}

\item{elementId}{The input slot that will be used to access the element.}

\item{file}{character, html filename to save output to,
Default: tempfile(pattern = 'jstree-',fileext = '.html').}

\item{browse}{whether to open a browser to view the html, Default: TRUE}
}
\description{
Htmlwidget for the jsTree Javascript library
}
\details{
valid core objects can be found in the jsTree javascript library api
 \href{https://www.jstree.com/api/}{homepage}. 
 
All objects that are children of 'jstree.defaults.core' are valid inputs, 
except 'jstree.defaults.core.data' which is constructed internally by the R function call.
The R list object is translated internally into a valid javascript object.

parameters in ... that can be passed on to the vcs package are:

\strong{remote_repo} a character object that defines the remote user/repository

\strong{remote_branch} character object that defines the branch of remote_repo (ussually 'master')

\strong{vcs} character object that defines for vcs which version control system to attach
 (github, bitbucket, svn)
 
\strong{preview.search} character object that defines a search term to initialize to in the
 preview pane searchbox

if \strong{remote_repo} is given a preview pane of a selected file from the tree will appear to 
the right of the tree 

\strong{preview.search} is only relevant for vcs in (github,bitbucket) where file
 previewing is available

For more information on the vcs package go to \url{https://github.com/metrumresearchgroup/vcs}
}
\examples{
if(interactive()){

data(states)
data(state_bird)

#collapse columns to text (with sep "/")
nested_string <- apply(states,1,paste,collapse='/')
jsTree(nested_string)

#pass additional parameters to core
jsTree(nested_string,core=list(multiple=FALSE))

# Add tooltips to state names with the state bird 
jsTree(nested_string,tooltips = state_bird)

#initialize tree with checked boxes for certain fields
nodestate1 <- states$variable=='Area'
jsTree(nested_string,nodestate=nodestate1)

nodestate2 <- states$variable=='Area'&grepl('^M',states$state.name)
jsTree(nested_string,nodestate=nodestate2)

nodestate3 <- states$variable \%in\% c('Murder') & states$value >= 10
nodestate4 <- states$variable \%in\% c('HS.Grad') & states$value <= 55
jsTree(nested_string,nodestate=nodestate3|nodestate4)

#change the order of the hierarchy
nested_string2 <- apply(states[,c(4,1,2,3,5)],1,paste,collapse='/')

jsTree(nested_string2)

#use jsTree to visualize folder structure

jsTree(list.files(full.names = TRUE,recursive = FALSE))

\dontrun{
# This may be too long for example if running from ~.
jsTree(list.files(full.names = TRUE,recursive = TRUE))
}
}

}
